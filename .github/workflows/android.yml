name: Build SmartLift APKs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a, x86, x86_64]

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # 3️⃣ Install Buildozer and python-for-android
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer python-for-android

      # 4️⃣ Apply libffi patch
      - name: Run libffi patch
        run: python .github/scripts/patch_libffi.py

      # 5️⃣ Set ABI in buildozer.spec and build APK
      - name: Build APK for ${{ matrix.abi }}
        run: |
          sed -i "s/^#* *android.arch =.*/android.arch = ${matrix.abi}/" buildozer.spec
          buildozer android debug

      # 6️⃣ Upload per-ABI APK
      - name: Upload per-ABI APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.abi }}
          path: bin/*.apk

  universal:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer python-for-android

      - name: Run libffi patch
        run: python .github/scripts/patch_libffi.py

      - name: Build universal APK
        run: |
          sed -i "s/^#* *android.arch =.*/android.arch = all/" buildozer.spec
          buildozer android debug

      - name: Upload universal APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-universal
          path: bin/*.apk
