name: Build Android APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]
    name: Build APK (${{ matrix.abi }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            unzip \
            openjdk-17-jdk \
            zip \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            liblzma-dev \
            zlib1g-dev \
            libbz2-dev \
            wget \
            curl

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install buildozer

      - name: Prepare Buildozer spec
        run: |
          cp buildozer.spec buildozer.spec.bak
          sed -i "s/^# *android.arch =.*/android.arch = ${matrix.abi}/" buildozer.spec || echo "android.arch = ${matrix.abi}" >> buildozer.spec

      - name: Build APK (${{ matrix.abi }})
        run: |
          buildozer android release
          ls -lh bin/

      - name: Decode Keystore
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Sign APK (${{ matrix.abi }})
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          for apk in bin/*.apk; do
            echo "ðŸ”‘ Signing $apk"
            apksigner sign \
              --ks keystore.jks \
              --ks-key-alias "$KEY_ALIAS" \
              --ks-pass pass:"$KEYSTORE_PASSWORD" \
              --key-pass pass:"$KEY_PASSWORD" \
              "$apk"
          done
        env:
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload per-ABI APK
        uses: actions/upload-artifact@v4
        with:
          name: SmartLift-${{ matrix.abi }}
          path: bin/*.apk

  universal:
    runs-on: ubuntu-22.04
    needs: build
    name: Build Universal APK

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            unzip \
            openjdk-17-jdk \
            zip \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            liblzma-dev \
            zlib1g-dev \
            libbz2-dev \
            wget \
            curl

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install buildozer

      - name: Build Universal APK
        run: |
          buildozer android release --universal
          ls -lh bin/

      - name: Decode Keystore
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Sign Universal APK
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          for apk in bin/*.apk; do
            echo "ðŸ”‘ Signing $apk"
            apksigner sign \
              --ks keystore.jks \
              --ks-key-alias "$KEY_ALIAS" \
              --ks-pass pass:"$KEYSTORE_PASSWORD" \
              --key-pass pass:"$KEY_PASSWORD" \
              "$apk"
          done
        env:
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Universal APK
        uses: actions/upload-artifact@v4
        with:
          name: SmartLift-universal
          path: bin/*.apk
