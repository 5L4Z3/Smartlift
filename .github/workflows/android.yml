name: Build Android APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool pkg-config unzip openjdk-17-jdk

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade cython python-for-android buildozer

      - name: Make patch_libffi executable
        run: chmod +x .github/scripts/patch_libffi.py

      - name: Run libffi patch
        run: python .github/scripts/patch_libffi.py

      - name: Backup buildozer.spec
        run: cp buildozer.spec buildozer.spec.bak

      - name: Set architecture
        run: sed -i "s/^android.arch =.*/android.arch = ${matrix.abi}/" buildozer.spec

      - name: Decode keystore (if present)
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > release.keystore

      - name: Set ANDROID_KEYSTORE_PATH environment
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: echo "ANDROID_KEYSTORE_PATH=$(pwd)/release.keystore" >> $GITHUB_ENV

      - name: Build APK
        run: buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: "SmartLift-${{ matrix.abi }}"
          path: bin/*.apk

  build_universal:
    runs-on: ubuntu-latest
    needs: build
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python & dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool pkg-config unzip openjdk-17-jdk
          python -m pip install --upgrade pip
          pip install --upgrade cython python-for-android buildozer

      - name: Restore original buildozer.spec
        run: cp buildozer.spec.bak buildozer.spec

      - name: Decode keystore (if present)
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > release.keystore

      - name: Set ANDROID_KEYSTORE_PATH environment
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: echo "ANDROID_KEYSTORE_PATH=$(pwd)/release.keystore" >> $GITHUB_ENV

      - name: Build Universal APK
        run: |
          sed -i "s/^android.arch =.*/android.arch = armeabi-v7a,arm64-v8a,x86,x86_64/" buildozer.spec
          buildozer android debug

      - name: Upload Universal APK
        uses: actions/upload-artifact@v4
        with:
          name: SmartLift-universal
          path: bin/*.apk
