name: Android Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk unzip zip libltdl-dev
          python -m pip install --upgrade pip
          pip install buildozer cython

      - name: Run libffi patch
        run: python .github/scripts/patch_libffi.py

      - name: Configure ABI
        run: |
          sed -i "s/^#* *android.arch =.*/android.arch = ${matrix.abi}/" buildozer.spec

      - name: Build APK for ${{ matrix.abi }}
        run: buildozer android release

      - name: Upload ABI-specific APK
        uses: actions/upload-artifact@v3
        with:
          name: SmartLift-${{ matrix.abi }}
          path: bin/*.apk

  universal:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk unzip zip libltdl-dev
          python -m pip install --upgrade pip
          pip install buildozer cython

      - name: Run libffi patch
        run: python .github/scripts/patch_libffi.py

      - name: Enable universal build
        run: |
          sed -i "s/^#* *android.arch =.*/# android.arch = all/" buildozer.spec

      - name: Build universal APK
        run: buildozer android release

      - name: Upload Universal APK
        uses: actions/upload-artifact@v3
        with:
          name: SmartLift-universal
          path: bin/*.apk
