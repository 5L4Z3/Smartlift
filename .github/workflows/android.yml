name: Android APK Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build APK (${{ matrix.abi }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            libffi-dev libssl-dev \
            autoconf automake libtool \
            pkg-config python3-dev

      - name: Prepare buildozer.spec for ABI
        run: sed "s/__ABI__/${{ matrix.abi }}/" buildozer.spec.in > buildozer.spec

      - name: Decode Keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > my-release-key.keystore

      - name: Build APK
        run: |
          buildozer android release

      - name: Upload ABI APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.abi }}
          path: bin/*.apk

  universal:
    name: Build Universal APK
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all ABI APKs
        uses: actions/download-artifact@v4
        with:
          path: apks

      - name: Install bundletool
        run: |
          curl -L -o bundletool.jar https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar

      - name: Build Universal APK
        run: |
          mkdir universal
          java -jar bundletool.jar build-apks \
            --mode=universal \
            --output=universal/app.apks \
            --bundle=apks/*/*.apk \
            --ks=my-release-key.keystore \
            --ks-pass=pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
            --ks-key-alias=${{ secrets.ANDROID_KEY_ALIAS }} \
            --key-pass=pass:${{ secrets.ANDROID_KEY_PASSWORD }}

          unzip universal/app.apks -d universal/out
          mv universal/out/universal.apk universal/SmartLift-universal.apk

      - name: Upload Universal APK
        uses: actions/upload-artifact@v4
        with:
          name: SmartLift-universal
          path: universal/SmartLift-universal.apk
